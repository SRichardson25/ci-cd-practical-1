# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

workflows:
  version: 2
  build:
    jobs:
      - build_and_test
      # - deploy_to_staging:
      #     requires:
      #       - build_and_test
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - run_e2e_tests:
      #     requires:
      #       - deploy_to_staging
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - run_performance_tests:
      #     requires:
      #       - deploy_to_staging
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - hold_production_deploy:
      #     type: approval
      #     requires:
      #       - run_performance_tests
      #       - run_e2e_tests
          # filters:
          #   branches:
          #     only: master
      - publish_github_release:
          requires:
            # - hold_production_deploy
            - build_and_test
          filters:
            branches:
              only:
                - master
      # - deploy_to_production:
      #     requires:
      #       - hold_production_deploy
      #     filters:
      #       branches:
      #         only:
      #           - master

jobs:
  build_and_test:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.15.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      # run tests!
      - run: yarn test

      - run: yarn build

      - persist_to_workspace:
          root: ~/
          paths: .

  deploy_to_staging:
    docker:
      - image: circleci/node:10.15.1

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/

      - run: npx surge build/ https://rupert-ci-cd-staging.surge.sh

  run_e2e_tests:
    docker:
      - image: circleci/node:10.15.1-jessie-browsers

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/

      - run: yarn e2e

  run_performance_tests:
    docker:
      - image: circleci/node:10.15.1-jessie-browsers

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/

      - run: 
          yarn performance

      - run:
          name: Store Performance Test Results
          command: |
            mkdir -p /tmp/perf_results
            cp *.report.* /tmp/perf_results
      - store_artifacts:
          path: /tmp/perf_results

  publish_github_release:
    docker:
      - image: circleci/golang:1.9.7-node

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/

      - run: |
          go get -u github.com/tcnksm/ghr
          git config user.email "rbarton@scottlogic.com"
          git config user.name "rupertbarton"
          git push
          ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete $(npm version patch) ./build/


  deploy_to_production:
    docker:
      - image: circleci/node:10.15.1

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/

      - run: npx surge build/ https://rupert-ci-cd-production.surge.sh
